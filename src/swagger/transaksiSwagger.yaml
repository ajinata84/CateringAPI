paths:
  /transaksi:
    post:
      summary: "Create a new transaksi"
      tags:
        - "Transaksi"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: array
                  items:
                    type: object
                    properties:
                      paketId:
                        type: string
                      cateringId:
                        type: string
                      ongkir:
                        type: number
                      totalHarga:
                        type: number
                      statusOrder:
                        type: string
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                paymentMethod:
                  type: string
            example:
              orders:
                - paketId: "1"
                  cateringId: "1"
                  ongkir: 10000
                  totalHarga: 510000
                  statusOrder: "Pending"
              startDate: "2023-10-01"
              endDate: "2023-10-07"
              paymentMethod: "Credit Card"
      responses:
        200:
          description: "Transaksi created successfully"
        500:
          description: "Internal server error"
    get:
      summary: "Get all transaksis for the authenticated user"
      tags:
        - "Transaksi"
      responses:
        200:
          description: "A list of transaksis"
          content:
            application/json:
              example:
                - id: "1"
                  customerId: "123"
                  startDate: "2023-10-01"
                  endDate: "2023-10-07"
                  Orders:
                    - id: "1"
                      statusOrder: "Pending"
                      paket:
                        id: "1"
                        nama: "Paket A"
                        deskripsi: "Deskripsi Paket A"
                        harga: 500000
                  paymentMethod: "Credit Card"
        500:
          description: "Internal server error"
  /transaksi/{transaksiId}:
    get:
      summary: "Get a transaksi by ID"
      tags:
        - "Transaksi"
      parameters:
        - in: path
          name: transaksiId
          required: true
          schema:
            type: string
          description: "The ID of the transaksi to retrieve"
      responses:
        200:
          description: "Transaksi retrieved successfully"
          content:
            application/json:
              example:
                id: "1"
                customerId: "123"
                startDate: "2023-10-01"
                endDate: "2023-10-07"
                Orders:
                  - id: "1"
                    statusOrder: "Pending"
                    paket:
                      id: "1"
                      nama: "Paket A"
                      deskripsi: "Deskripsi Paket A"
                      harga: 500000
                customer:
                  id: "123"
                  nama: "John Doe"
                paymentMethod: "Credit Card"
        404:
          description: "Transaksi not found"
        500:
          description: "Internal server error"
