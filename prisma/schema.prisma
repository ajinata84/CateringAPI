generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  userId     String    @id @default(uuid())
  created_at DateTime  @default(now()) @db.Timestamp(0)
  username   String    @db.VarChar(20)
  email      String    @unique @db.VarChar(255)
  password   String    @db.VarChar(255)
  hp         String?   @db.VarChar(20)
  alamat     String?
  img        String?   @db.VarChar(255)
  Customer   Customer?
  Owner      Owner?
}

model Customer {
  id         String      @id @default(uuid())
  userId     String      @unique
  user       users       @relation(fields: [userId], references: [userId])
  Transaksis Transaksi[]
}

model Owner {
  id         String      @id @default(uuid())
  userId     String      @unique
  Caterings  Catering[]
  Manajemens Manajemen[]
  user       users       @relation(fields: [userId], references: [userId])
}

model Catering {
  id         String        @id @default(uuid())
  ownerId    String
  nama       String
  alamat     String?
  hp         String?       @db.VarChar(20)
  rating     Float?
  deskripsi  String?
  imageUrl   String?
  owner      Owner         @relation(fields: [ownerId], references: [id])
  kategoris  KategoriMap[]
  Manajemens Manajemen[]
  Orders     Order[]
  Pakets     Paket[]

  @@index([ownerId], map: "Catering_ownerId_fkey")
}

model Manajemen {
  id         String   @id @default(uuid())
  ownerId    String
  cateringId String
  catering   Catering @relation(fields: [cateringId], references: [id])
  owner      Owner    @relation(fields: [ownerId], references: [id])

  @@index([cateringId], map: "Manajemen_cateringId_fkey")
  @@index([ownerId], map: "Manajemen_ownerId_fkey")
}

model Kategori {
  id        String        @id @default(uuid())
  nama      String
  kategoris KategoriMap[]
}

model KategoriMap {
  id         String   @id @default(uuid())
  kategoriId String
  cateringId String
  catering   Catering @relation(fields: [cateringId], references: [id])
  kategori   Kategori @relation(fields: [kategoriId], references: [id])

  @@index([cateringId], map: "KategoriMap_cateringId_fkey")
  @@index([kategoriId], map: "KategoriMap_kategoriId_fkey")
}

model Paket {
  id         String     @id @default(uuid())
  nama       String
  cateringId String
  durasi     Int
  harga      Float
  deskripsi  String?
  Orders     Order[]
  catering   Catering   @relation(fields: [cateringId], references: [id])
  Schedules  Schedule[]

  @@index([cateringId], map: "Paket_cateringId_fkey")
}

model Schedule {
  id            String          @id @default(uuid())
  paketId       String
  waktu         String
  paket         Paket           @relation(fields: [paketId], references: [id])
  ScheduleFoods ScheduleFoods[]

  @@index([paketId], map: "Schedule_paketId_fkey")
}

model Makanan {
  id            String          @id @default(uuid())
  nama          String
  deskripsi     String?
  imageUrl      String?
  ScheduleFoods ScheduleFoods[]
}

model ScheduleFoods {
  id         String   @id @default(uuid())
  makananId  String
  scheduleId String
  makanan    Makanan  @relation(fields: [makananId], references: [id])
  schedule   Schedule @relation(fields: [scheduleId], references: [id])

  @@index([makananId], map: "ScheduleFoods_makananId_fkey")
  @@index([scheduleId], map: "ScheduleFoods_scheduleId_fkey")
}

model Transaksi {
  id            String   @id @default(uuid())
  customerId    String
  startDate     DateTime
  endDate       DateTime
  paymentMethod String   @db.VarChar(50)
  alamat        String
  ongkir        Float
  Orders        Order[]
  customer      Customer @relation(fields: [customerId], references: [id])

  @@index([customerId], map: "Transaksi_customerId_fkey")
}

model Order {
  id          String    @id @default(uuid())
  transaksiId String
  paketId     String
  cateringId  String
  totalHarga  Float
  tanggal     DateTime
  durasi      Int
  statusOrder String    @db.VarChar(50)
  catering    Catering  @relation(fields: [cateringId], references: [id], map: "Order_Owner_fkey")
  paket       Paket     @relation(fields: [paketId], references: [id], map: "Order_Paket_fkey")
  transaksi   Transaksi @relation(fields: [transaksiId], references: [id], map: "Order_Transaksi_fkey")

  @@index([cateringId], map: "Order_Owner_fkey")
  @@index([paketId], map: "Order_Paket_fkey")
  @@index([transaksiId], map: "Order_Transaksi_fkey")
}
